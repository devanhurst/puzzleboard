{"version":3,"sources":["Puzzle.js","providers/UsedLetters.js","components/Key.js","components/Keyboard.js","providers/Clipboard.js","components/PuzzleImage.js","components/Game.js","usedLetterboard.js","components/App.js","index.js"],"names":["Puzzle","category","answer","this","letters","Object","keys","map","lineNumber","join","forEach","split","letter","push","buildLetter","toUpperCase","match","Letter","Space","Punctuation","size","path","encodeURIComponent","puzzle","puzzleParams","lineParams","filter","line","display","length","letterToReveal","numberRevealed","reveal","candidates","revealed","random","Math","floor","letterToHide","hide","includes","defaultUsedLetters","UsedLetterContext","React","createContext","Key","props","toggle","usedLetter","useContext","color","isVowel","Button","variant","onClick","Keyboard","revealRandom","Grid","container","item","xs","ClipboardContext","PuzzleImage","src","imageUrl","alt","Game","useState","usedLetters","setUsedLetters","lastLetterRevealed","setLastLetterRevealed","clipboard","setClipboard","useEffect","lastLetterRevealedText","textToCopy","consonants","vowels","unused","usedLetterboard","Clipboard","Provider","value","UsedLetters","height","spacing","letterToToggle","revealedLetter","number","text","onCopy","Fab","App","setCategory","setAnswer","updateAnswer","newAnswer","onSubmit","event","preventDefault","type","maxLength","placeholder","onChange","target","line1","line2","line3","line4","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b24851d.chunk.js","sourcesContent":["export class Puzzle {\n  constructor(category, answer) {\n    this.category = category;\n    this.letters = [];\n    this.answer = Object.keys(answer)\n      .map((lineNumber) => answer[lineNumber])\n      .join(\" \");\n\n    Object.keys(answer).forEach((lineNumber) => {\n      answer[lineNumber]\n        .split(\"\")\n        .forEach((letter) =>\n          this.letters.push(this.buildLetter(letter.toUpperCase(), lineNumber))\n        );\n    });\n  }\n\n  buildLetter(letter, lineNumber) {\n    if (letter.match(/[A-Z]/)) {\n      return new Letter(letter, lineNumber);\n    } else if (letter === \" \") {\n      return new Space(letter, lineNumber);\n    } else {\n      return new Punctuation(letter, lineNumber);\n    }\n  }\n\n  imageUrl(size) {\n    const url = \"https://www.thewordfinder.com/wof-puzzle-generator\";\n    const path = size === \"thumb\" ? \"puzzle-thumb.php\" : \"puzzle.php\";\n    const defaultParams = \"?bg=2\";\n    const category = `&cat=${encodeURIComponent(this.category)}`;\n    const puzzle = this.puzzleParams();\n\n    return `${url}/${path}${defaultParams}${category}${puzzle}`;\n  }\n\n  puzzleParams() {\n    return (\n      this.lineParams(\"1\") +\n      this.lineParams(\"2\") +\n      this.lineParams(\"3\") +\n      this.lineParams(\"4\")\n    );\n  }\n\n  lineParams(lineNumber) {\n    const letters = this.letters\n      .filter((letter) => letter.line === lineNumber)\n      .map((letter) => encodeURIComponent(letter.display()))\n      .join(\"\");\n\n    return letters.length > 0 ? `&ln${lineNumber}=${letters}` : \"\";\n  }\n\n  reveal(letterToReveal) {\n    let numberRevealed = 0;\n\n    this.letters.forEach((letter) => {\n      if (letter.letter === letterToReveal) {\n        letter.reveal();\n        numberRevealed++;\n      }\n    });\n\n    return numberRevealed;\n  }\n\n  revealRandom() {\n    const candidates = this.letters.filter((letter) => !letter.revealed);\n    const random = candidates[Math.floor(Math.random() * candidates.length)];\n    if (random) {\n      random.reveal();\n    }\n  }\n\n  hide(letterToHide) {\n    this.letters.forEach((letter) => {\n      if (letter.letter === letterToHide) {\n        letter.hide();\n      }\n    });\n  }\n}\n\nexport class Letter {\n  constructor(letter, line) {\n    this.letter = letter;\n    this.line = line;\n    this.revealed = false;\n  }\n\n  isVowel() {\n    return [\"A\", \"E\", \"I\", \"O\", \"U\"].includes(this.letter);\n  }\n\n  reveal() {\n    this.revealed = true;\n  }\n\n  hide() {\n    this.revealed = false;\n  }\n\n  toggle() {\n    this.revealed = !this.revealed;\n  }\n\n  display() {\n    return this.revealed ? this.letter : \"_\";\n  }\n}\n\nexport class Space extends Letter {\n  constructor(letter, line) {\n    super(\" \", line);\n    this.revealed = true;\n  }\n}\n\nexport class Punctuation extends Letter {\n  constructor(letter, line) {\n    super(letter, line);\n    this.revealed = true;\n  }\n}\n","import React from \"react\";\nimport { Letter } from \"../Puzzle\";\n\nexport const defaultUsedLetters = [\n  new Letter(\"A\"),\n  new Letter(\"B\"),\n  new Letter(\"C\"),\n  new Letter(\"D\"),\n  new Letter(\"E\"),\n  new Letter(\"F\"),\n  new Letter(\"G\"),\n  new Letter(\"H\"),\n  new Letter(\"I\"),\n  new Letter(\"J\"),\n  new Letter(\"K\"),\n  new Letter(\"L\"),\n  new Letter(\"M\"),\n  new Letter(\"N\"),\n  new Letter(\"O\"),\n  new Letter(\"P\"),\n  new Letter(\"Q\"),\n  new Letter(\"R\"),\n  new Letter(\"S\"),\n  new Letter(\"T\"),\n  new Letter(\"U\"),\n  new Letter(\"V\"),\n  new Letter(\"W\"),\n  new Letter(\"X\"),\n  new Letter(\"Y\"),\n  new Letter(\"Z\"),\n];\n\nconst UsedLetterContext = React.createContext({});\nexport default UsedLetterContext;\n","import React, { useContext } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport UsedLetterContext from \"../providers/UsedLetters\";\n\nconst Key = (props) => {\n  const { letter, toggle } = props;\n  const usedLetters = useContext(UsedLetterContext);\n\n  const usedLetter = usedLetters.filter(\n    (usedLetter) => usedLetter.letter === letter\n  )[0];\n  const color = usedLetter.isVowel() ? \"secondary\" : \"primary\";\n\n  const handleClick = () => {\n    toggle(letter);\n  };\n\n  return (\n    <Button\n      variant=\"contained\"\n      color={usedLetter.revealed ? \"default\" : color}\n      onClick={handleClick}\n    >\n      {letter}\n    </Button>\n  );\n};\n\nexport default Key;\n","import React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport Key from \"./Key\";\n\nconst Keyboard = (props) => {\n  const { toggle, revealRandom } = props;\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <Key letter=\"Q\" toggle={toggle} />\n        <Key letter=\"W\" toggle={toggle} />\n        <Key letter=\"E\" toggle={toggle} />\n        <Key letter=\"R\" toggle={toggle} />\n        <Key letter=\"T\" toggle={toggle} />\n        <Key letter=\"Y\" toggle={toggle} />\n        <Key letter=\"U\" toggle={toggle} />\n        <Key letter=\"I\" toggle={toggle} />\n        <Key letter=\"O\" toggle={toggle} />\n        <Key letter=\"P\" toggle={toggle} />\n      </Grid>\n      <Grid item xs={12}>\n        <Key letter=\"A\" toggle={toggle} />\n        <Key letter=\"S\" toggle={toggle} />\n        <Key letter=\"D\" toggle={toggle} />\n        <Key letter=\"F\" toggle={toggle} />\n        <Key letter=\"G\" toggle={toggle} />\n        <Key letter=\"H\" toggle={toggle} />\n        <Key letter=\"J\" toggle={toggle} />\n        <Key letter=\"K\" toggle={toggle} />\n        <Key letter=\"L\" toggle={toggle} />\n      </Grid>\n      <Grid item xs={12}>\n        <Key letter=\"Z\" toggle={toggle} />\n        <Key letter=\"X\" toggle={toggle} />\n        <Key letter=\"C\" toggle={toggle} />\n        <Key letter=\"V\" toggle={toggle} />\n        <Key letter=\"B\" toggle={toggle} />\n        <Key letter=\"N\" toggle={toggle} />\n        <Key letter=\"M\" toggle={toggle} />\n        <Button variant=\"contained\" color=\"secondary\" onClick={revealRandom}>\n          Toss Up\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Keyboard;\n","import React from \"react\";\n\nconst ClipboardContext = React.createContext(\"\");\n\nexport default ClipboardContext;\n","import React from \"react\";\n\nconst PuzzleImage = (props) => {\n  const { puzzle } = props;\n\n  return <img src={puzzle.imageUrl(\"thumb\")} alt=\"puzzleboard\" />;\n};\n\nexport default PuzzleImage;\n","import React, { useState, useEffect } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Keyboard from \"./Keyboard\";\nimport usedLetterboard from \"../usedLetterboard\";\nimport ClipboardContext from \"../providers/Clipboard\";\nimport UsedLettersContext, {\n  defaultUsedLetters,\n} from \"../providers/UsedLetters\";\nimport { Grid, Fab } from \"@material-ui/core\";\nimport { Puzzle } from \"../Puzzle\";\nimport PuzzleImage from \"./PuzzleImage\";\n\nconst Game = (props) => {\n  const { category, answer } = props;\n  const [puzzle] = useState(new Puzzle(category, answer));\n  const [usedLetters, setUsedLetters] = useState(defaultUsedLetters);\n  const [lastLetterRevealed, setLastLetterRevealed] = useState(\"\");\n  const [clipboard, setClipboard] = useState(\"\");\n\n  useEffect(() => {\n    const lastLetterRevealedText = !!lastLetterRevealed\n      ? `**Last Pick: ${lastLetterRevealed[\"letter\"]}** (x${lastLetterRevealed[\"number\"]})`\n      : \"\";\n\n    // prettier-ignore\n    let textToCopy = puzzle.imageUrl();\n    if (lastLetterRevealed[\"letter\"] !== \"TOSS UP\") {\n      textToCopy += \n`\n${usedLetterboard(usedLetters)}\n${lastLetterRevealedText}\n`;\n    }\n    setClipboard(textToCopy);\n  }, [puzzle, usedLetters, lastLetterRevealed]);\n\n  const toggleLetter = (letterToToggle) => {\n    const letters = [...usedLetters];\n    const usedLetter = letters.filter(\n      (usedLetter) => usedLetter.letter === letterToToggle\n    )[0];\n\n    let revealedLetter = null;\n\n    if (!usedLetter.revealed) {\n      usedLetter.reveal();\n      const numberRevealed = puzzle.reveal(letterToToggle);\n      revealedLetter = { letter: letterToToggle, number: numberRevealed };\n    } else {\n      usedLetter.hide();\n      puzzle.hide(letterToToggle);\n    }\n    setLastLetterRevealed(revealedLetter);\n    setUsedLetters(letters);\n  };\n\n  const revealRandom = () => {\n    puzzle.revealRandom();\n    setLastLetterRevealed({ letter: \"TOSS UP\", number: 1 });\n  };\n\n  return (\n    <ClipboardContext.Provider value={clipboard}>\n      <UsedLettersContext.Provider value={usedLetters}>\n        <div height=\"25%\">\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <PuzzleImage puzzle={puzzle} />\n            </Grid>\n          </Grid>\n        </div>\n        <Keyboard toggle={toggleLetter} revealRandom={revealRandom} />\n        <CopyToClipboard text={clipboard} onCopy={() => {}}>\n          <Fab variant=\"extended\">Copy Puzzle to Clipboard</Fab>\n        </CopyToClipboard>\n      </UsedLettersContext.Provider>\n    </ClipboardContext.Provider>\n  );\n};\n\nexport default Game;\n","export default (usedLetters) => {\n  const consonants = usedLetters.filter((letter) => !letter.isVowel());\n  const vowels = usedLetters.filter((letter) => letter.isVowel());\n  const unused = (letters) =>\n    letters\n      .map((letter) => (letter.revealed ? null : letter.letter))\n      .filter((letter) => !!letter)\n      .join(\" \");\n\n  // prettier-ignore\n  return(\n`\n**Consonants Remaining**\n${unused(consonants)}\n**Vowels Remaining**\n${unused(vowels)}`\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport Game from \"./Game\";\n\nconst App = () => {\n  const [category, setCategory] = useState(\"\");\n  const [answer, setAnswer] = useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const updateCategory = (event) => {\n    setCategory(event.target.value.toUpperCase());\n  };\n\n  const updateAnswer = (value, line) => {\n    const newAnswer = { ...answer };\n    newAnswer[line] = value.toUpperCase();\n    setAnswer(newAnswer);\n  };\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/play\">\n          <Game category={category} answer={answer} />\n        </Route>\n        <Route path=\"/\">\n          <h1>Wheel of Fortune Puzzle Manager</h1>\n          <form onSubmit={handleSubmit}>\n            <label>\n              Category:\n              <input\n                type=\"text\"\n                maxLength={20}\n                placeholder=\"CATEGORY\"\n                value={category}\n                onChange={updateCategory}\n              />\n            </label>\n            <label>\n              Puzzle:\n              <input\n                type=\"text\"\n                maxLength={12}\n                placeholder=\"LINE ONE\"\n                value={answer.line1}\n                onChange={(event) => updateAnswer(event.target.value, 1)}\n              />\n              <input\n                type=\"text\"\n                maxLength={14}\n                placeholder=\"LINE TWO\"\n                value={answer.line2}\n                onChange={(event) => updateAnswer(event.target.value, 2)}\n              />\n              <input\n                type=\"text\"\n                maxLength={14}\n                placeholder=\"LINE THREE\"\n                value={answer.line3}\n                onChange={(event) => updateAnswer(event.target.value, 3)}\n              />\n              <input\n                type=\"text\"\n                maxLength={12}\n                placeholder=\"LINE FOUR\"\n                value={answer.line4}\n                onChange={(event) => updateAnswer(event.target.value, 4)}\n              />\n            </label>\n          </form>\n          <NavLink to=\"/puzzleboard/play\">Start Game</NavLink>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}